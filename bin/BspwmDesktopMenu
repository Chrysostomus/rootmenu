#!/bin/bash

if ! [ -f "$HOME/.dmenurc" ]; then
	cp /usr/share/dmenu/dmenurc $HOME/.dmenurc
fi
. $HOME/.dmenurc

eval $(xdotool getmouselocation --shell)
menu_widht=300
monitor_widht=$(wattr w $(lsw -r))
monitor_height=$(wattr h $(lsw -r))
lines=20
menu_height=$(echo "$lines * 23" | bc)
maxx=$(echo "$monitor_widht - $menu_widht" | bc)
miny=$PANEL_HEIGHT
maxy=$(echo "$monitor_height - $menu_height" | bc)
XP=$(echo "$X - 15" | bc)
[[ $XP -gt $maxx ]] && XP=$maxx
YP=$Y
[[ $YP -lt $miny ]] && YP=$miny
[[ $YP -gt $maxy ]] && YP=$maxy

if [ "$1" == "" ]; then
    title="Desk"
    menu=( \
#               labels            commands
#           Desk =========================================
                Flip                "$0 flip"
                Rotate              "$0 rotate"
                BalanceWindows      "bspc desktop -B"
                EqualizeWindows     "bspc desktop -E"
                RenameDesktop	    "bspwm-menu desktop-rename"
                AddDesktop          "bspwm-menu desktop-add"
                RemoveDesktop       "bspwm-menu desktop-remove"
                SwapDesktop         "bspwm-menu desktop-swap"
                FocusFollowsPointer "toggle-focus-follows-pointer"
                PointerFollowsFocus "toggle-pointer-follows-focus"
                ShowHidden			"whid dmenu"
                Autogap             "autogap"
    )
else
    case $1 in
    flip)
        title="Flip"
        menu=( \
#           Web ==========================================
                Vertical          "bspc desktop -F horizontal" \
                Horizontal        "bspc desktop -F vertical" \
         )
    ;;
    rotate)
        title="Rotate"
        menu=( \
#           Tools ========================================
                +90°              "bspc desktop -R 90" \
                -90°              "bspc desktop -R -90" \
                +180°             "bspc desktop -R 180" \
         )
    esac
fi

for (( count = 0 ; count < ${#menu[*]}; count++ )); do

#   build two arrays, one for labels, the other for commands
    temp=${menu[$count]}
    if (( $count < ${#menu[*]}-2 )); then
        temp+="\n"
    fi
    if (( "$count" % 2 == "0" )); then
        menu_labels+=$temp
    else
        menu_commands+=$temp
    fi

done

select=`echo -e $menu_labels | dmenu -p $title -fn $DMENU_FN -nb $DMENU_NB -nf $DMENU_NF -sf $DMENU_SF -sb $DMENU_SB -l $lines -y $YP -x $XP -w $menu_widht`

if [ "$select" != "" ]; then

#   fetch and clean the index of the selected label
    index=`echo -e "${menu_labels[*]}" | grep -xnm1 $select | sed 's/:.*//'`
    
#   get the command which has the same index
    part=`echo -e ${menu_commands[*]} | head -$index`
    exe=`echo -e "$part" | tail -1`

#   execute
    $exe &
fi
